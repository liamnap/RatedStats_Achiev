# .github/workflows/daily-sync.yml
name: Daily PvP Sync

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'  # Daily at 01:00 UTC

jobs:

  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          echo "Generating matrix..."
          MATRIX=$(python3 -c "import json; print(json.dumps({'include':[{'region':r,'batch':b} for r in ['us','eu','kr','tw'] for b in range(100)]}))")
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  sync:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
      fail-fast: false
    timeout-minutes: 120

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install aiohttp requests psutil

      - name: Run Batch Sync
        env:
          REGION:         ${{ matrix.region }}
          BATCH_ID:       ${{ matrix.batch }}
          TOTAL_BATCHES:  100
          BLIZZARD_CLIENT_ID:       ${{ secrets.BLIZZARD_CLIENT_ID }}
          BLIZZARD_CLIENT_SECRET:   ${{ secrets.BLIZZARD_CLIENT_SECRET }}
          BLIZZARD_CLIENT_ID_EU:    ${{ secrets.BLIZZARD_CLIENT_ID_EU }}
          BLIZZARD_CLIENT_SECRET_EU:${{ secrets.BLIZZARD_CLIENT_SECRET_EU }}
          BLIZZARD_CLIENT_ID_US:    ${{ secrets.BLIZZARD_CLIENT_ID_US }}
          BLIZZARD_CLIENT_SECRET_US:${{ secrets.BLIZZARD_CLIENT_SECRET_US }}
        run: |
          python sync_pvp.py \
            --mode batch \
            --region "$REGION" \
            --batch-id "$BATCH_ID" \
            --total-batches "$TOTAL_BATCHES"

      - name: Upload partial batch output
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.region }}-batch-${{ matrix.batch }}"
          path: "partial_outputs/${{ matrix.region }}_batch_${{ matrix.batch }}.lua"
          if-no-files-found: ignore

  finalize:
    needs: sync
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: [us, eu, kr, tw]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all_batches

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Finalize region file
        run: |
          python sync_pvp.py \
            --mode finalize \
            --region "${{ matrix.region }}"

      - name: Commit merged result
        run: |
          git config user.name  "GitHub Action"
          git config user.email "action@github.com"
          git add achiev/region_${{ matrix.region }}.lua
          git commit -m "PvP sync update for ${{ matrix.region }}" || echo "No changes to commit"
          git fetch origin dev
          git rebase origin/dev || echo "⚠️ Rebase failed"
          git push --force-with-lease origin dev || echo "❌ Push failed"
