name: Daily PvP Sync

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'  # Daily at 01:00 UTC

jobs:
  sync:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: [us, eu, kr, tw]
    timeout-minutes: 240

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install aiohttp requests psutil

      - name: Run Batches Sequentially
        env:
          REGION:         ${{ matrix.region }}
          TOTAL_BATCHES:  100
          BLIZZARD_CLIENT_ID:        ${{ secrets.BLIZZARD_CLIENT_ID }}
          BLIZZARD_CLIENT_SECRET:    ${{ secrets.BLIZZARD_CLIENT_SECRET }}
          BLIZZARD_CLIENT_ID_EU:     ${{ secrets.BLIZZARD_CLIENT_ID_EU }}
          BLIZZARD_CLIENT_SECRET_EU: ${{ secrets.BLIZZARD_CLIENT_SECRET_EU }}
          BLIZZARD_CLIENT_ID_US:     ${{ secrets.BLIZZARD_CLIENT_ID_US }}
          BLIZZARD_CLIENT_SECRET_US: ${{ secrets.BLIZZARD_CLIENT_SECRET_US }}
        run: |
          mkdir -p partial_outputs
          for BATCH_ID in $(seq 0 $((TOTAL_BATCHES - 1))); do
            echo "=== Running batch ${BATCH_ID} for ${REGION} ==="
            OUTPUT=$(python sync_pvp.py \
              --mode batch \
              --region "${REGION}" \
              --batch-id "${BATCH_ID}" \
              --total-batches "${TOTAL_BATCHES}")
            echo "$OUTPUT"
            # if the script printed "Wrote full …", stop here
            if [ -f partial_outputs/${REGION}_final.marker ]; then
              echo "✅ Finalize has run; stopping at batch ${BATCH_ID}"
              break
            fi
          done

      - name: Upload all partial batches
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.region }}-all-batches"
          path: "partial_outputs/${{ matrix.region }}_batch_*.lua"

      - name: Upload final Lua if present
        if: exists('region_${{ matrix.region }}.lua')
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.region }}-final-lua"
          path: region_${{ matrix.region }}.lua

  finalize:
    needs: sync
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: [us, eu, kr, tw]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download all partial batches
        uses: actions/download-artifact@v4
        with:
          name: "${{ matrix.region }}-all-batches"
          path: all_batches

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Finalize region file
        run: |
          python sync_pvp.py \
            --mode finalize \
            --region "${{ matrix.region }}"

      - name: Commit merged result
        run: |
          git config user.name  "GitHub Action"
          git config user.email "action@github.com"
          git add region_${{ matrix.region }}.lua
          git commit -m "PvP sync update for ${{ matrix.region }}" || echo "No changes to commit"
          git fetch origin dev
          git rebase origin/dev || echo "⚠️ Rebase failed"
          git push --force-with-lease origin dev || echo "❌ Push failed"
