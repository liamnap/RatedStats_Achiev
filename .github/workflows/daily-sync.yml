name: Daily PvP Sync

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'  # Run daily at 01:00 UTC

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 1380
    strategy:
      matrix:
        region: [us, eu, kr, tw]

    steps:
      # 1. full-depth checkout so we can switch branches
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0      # needed for git checkout later

      # 2. move onto the dev branch
      - name: Checkout dev branch
        run: git checkout dev

      # 3. set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install aiohttp requests psutil

      - name: Show public IP of runner
        run: |
          echo "IPv4:"
          curl -s https://api.ipify.org || echo "curl failed"
          echo ""
          echo "IPv6:"
          curl -s https://api64.ipify.org || echo "curl failed"

      # 4. run the sync *on the dev work-tree*
      - name: Run PvP Sync for ${{ matrix.region }}
        env:
         BLIZZARD_CLIENT_ID:     ${{ secrets.BLIZZARD_CLIENT_ID }}
         BLIZZARD_CLIENT_SECRET: ${{ secrets.BLIZZARD_CLIENT_SECRET }}
         BLIZZARD_CLIENT_ID_EU:     ${{ secrets.BLIZZARD_CLIENT_ID_EU }}
         BLIZZARD_CLIENT_SECRET_EU: ${{ secrets.BLIZZARD_CLIENT_SECRET_EU }}
         BLIZZARD_CLIENT_ID_US:     ${{ secrets.BLIZZARD_CLIENT_ID_US }}
         BLIZZARD_CLIENT_SECRET_US: ${{ secrets.BLIZZARD_CLIENT_SECRET_US }}
         REGION:                 ${{ matrix.region }}
         BATCH_SIZE:             2500      # configure your batch size here
        run: |
         python sync_pvp.py &  # run in background
         pid=$!
         echo "Started sync_pvp.py with PID $pid"

         # Keep the step alive
         while kill -0 "$pid" 2>/dev/null; do
           echo "[Runner is still working at $(date)]"
           sleep 60
         done

         wait "$pid"
         echo "Sync process completed."

      # 5. commit back to dev
      - name: Commit & push results
        run: |
          git config user.name  "GitHub Action"
          git config user.email "action@github.com"
          git add region_*.lua
          git commit -m "PvP sync update for ${{ matrix.region }}" || {
            echo "No changes to commit."
            exit 0
          }

          git fetch --all
          git rebase origin/dev || {
            echo "⚠️ Rebase failed. Saving backup of current state for manual review."
            mkdir -p .sync_backups
            cp region_*.lua ".sync_backups/region_${{ matrix.region }}_$(date +%s).lua"
            exit 0
          }

          git push --force-with-lease origin dev || {
            echo "❌ Push failed. Backup saved. You’ll need to resolve this manually."
            mkdir -p .sync_backups
            cp region_*.lua ".sync_backups/region_${{ matrix.region }}_$(date +%s).lua"
            exit 0
          }
