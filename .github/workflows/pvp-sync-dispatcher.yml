name: Dispatch PvP Sync Batches
on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'

permissions:
  actions: write   # needed to call createWorkflowDispatch
  contents: read

concurrency:
  group: pvp-sync-dispatcher-${{ github.ref }}
  cancel-in-progress: false

env:
  BATCH_SIZE: 2500
  MAX_BATCHES_PER_CRED: 20    # ~50k characters = 20 * 2500
  SUFFIX_LIST: '"_1","_2","_3","_4","_5","_429"'  # Customize per region
  REGIONS: us eu tw kr

jobs:
  prepare:
    runs-on: ubuntu-latest
    env:
      BLIZZARD_CLIENT_ID_EU_1:     ${{ secrets.BLIZZARD_CLIENT_ID_EU_1 }}
      BLIZZARD_CLIENT_SECRET_EU_1: ${{ secrets.BLIZZARD_CLIENT_SECRET_EU_1 }}
      BLIZZARD_CLIENT_ID_US_1:     ${{ secrets.BLIZZARD_CLIENT_ID_US_1 }}
      BLIZZARD_CLIENT_SECRET_US_1: ${{ secrets.BLIZZARD_CLIENT_SECRET_US_1 }}
      BLIZZARD_CLIENT_ID_TW_1:     ${{ secrets.BLIZZARD_CLIENT_ID_TW_1 }}
      BLIZZARD_CLIENT_SECRET_TW_1: ${{ secrets.BLIZZARD_CLIENT_SECRET_TW_1 }}
      BLIZZARD_CLIENT_ID_KR_1:     ${{ secrets.BLIZZARD_CLIENT_ID_KR_1 }}
      BLIZZARD_CLIENT_SECRET_KR_1: ${{ secrets.BLIZZARD_CLIENT_SECRET_KR_1 }}
      
      BLIZZARD_CLIENT_ID_EU_2:     ${{ secrets.BLIZZARD_CLIENT_ID_EU_2 }}
      BLIZZARD_CLIENT_SECRET_EU_2: ${{ secrets.BLIZZARD_CLIENT_SECRET_EU_2 }}
      BLIZZARD_CLIENT_ID_US_2:     ${{ secrets.BLIZZARD_CLIENT_ID_US_2 }}
      BLIZZARD_CLIENT_SECRET_US_2: ${{ secrets.BLIZZARD_CLIENT_SECRET_US_2 }}
      BLIZZARD_CLIENT_ID_TW_2:     ${{ secrets.BLIZZARD_CLIENT_ID_TW_2 }}
      BLIZZARD_CLIENT_SECRET_TW_2: ${{ secrets.BLIZZARD_CLIENT_SECRET_TW_2 }}
      BLIZZARD_CLIENT_ID_KR_2:     ${{ secrets.BLIZZARD_CLIENT_ID_KR_2 }}
      BLIZZARD_CLIENT_SECRET_KR_2: ${{ secrets.BLIZZARD_CLIENT_SECRET_KR_2 }}
      
      BLIZZARD_CLIENT_ID_EU_3:     ${{ secrets.BLIZZARD_CLIENT_ID_EU_3 }}
      BLIZZARD_CLIENT_SECRET_EU_3: ${{ secrets.BLIZZARD_CLIENT_SECRET_EU_3 }}
      BLIZZARD_CLIENT_ID_US_3:     ${{ secrets.BLIZZARD_CLIENT_ID_US_3 }}
      BLIZZARD_CLIENT_SECRET_US_3: ${{ secrets.BLIZZARD_CLIENT_SECRET_US_3 }}
      BLIZZARD_CLIENT_ID_TW_3:     ${{ secrets.BLIZZARD_CLIENT_ID_TW_3 }}
      BLIZZARD_CLIENT_SECRET_TW_3: ${{ secrets.BLIZZARD_CLIENT_SECRET_TW_3 }}
      BLIZZARD_CLIENT_ID_KR_3:     ${{ secrets.BLIZZARD_CLIENT_ID_KR_3 }}
      BLIZZARD_CLIENT_SECRET_KR_3: ${{ secrets.BLIZZARD_CLIENT_SECRET_KR_3 }}
      
      BLIZZARD_CLIENT_ID_EU_4:     ${{ secrets.BLIZZARD_CLIENT_ID_EU_4 }}
      BLIZZARD_CLIENT_SECRET_EU_4: ${{ secrets.BLIZZARD_CLIENT_SECRET_EU_4 }}
      BLIZZARD_CLIENT_ID_US_4:     ${{ secrets.BLIZZARD_CLIENT_ID_US_4 }}
      BLIZZARD_CLIENT_SECRET_US_4: ${{ secrets.BLIZZARD_CLIENT_SECRET_US_4 }}
      BLIZZARD_CLIENT_ID_TW_4:     ${{ secrets.BLIZZARD_CLIENT_ID_TW_4 }}
      BLIZZARD_CLIENT_SECRET_TW_4: ${{ secrets.BLIZZARD_CLIENT_SECRET_TW_4 }}
      BLIZZARD_CLIENT_ID_KR_4:     ${{ secrets.BLIZZARD_CLIENT_ID_KR_4 }}
      BLIZZARD_CLIENT_SECRET_KR_4: ${{ secrets.BLIZZARD_CLIENT_SECRET_KR_4 }}
      
      BLIZZARD_CLIENT_ID_EU_5:     ${{ secrets.BLIZZARD_CLIENT_ID_EU_5 }}
      BLIZZARD_CLIENT_SECRET_EU_5: ${{ secrets.BLIZZARD_CLIENT_SECRET_EU_5 }}
      BLIZZARD_CLIENT_ID_US_5:     ${{ secrets.BLIZZARD_CLIENT_ID_US_5 }}
      BLIZZARD_CLIENT_SECRET_US_5: ${{ secrets.BLIZZARD_CLIENT_SECRET_US_5 }}
      BLIZZARD_CLIENT_ID_TW_5:     ${{ secrets.BLIZZARD_CLIENT_ID_TW_5 }}
      BLIZZARD_CLIENT_SECRET_TW_5: ${{ secrets.BLIZZARD_CLIENT_SECRET_TW_5 }}
      BLIZZARD_CLIENT_ID_KR_5:     ${{ secrets.BLIZZARD_CLIENT_ID_KR_5 }}
      BLIZZARD_CLIENT_SECRET_KR_5: ${{ secrets.BLIZZARD_CLIENT_SECRET_KR_5 }}
      
      BLIZZARD_CLIENT_ID_EU_429:     ${{ secrets.BLIZZARD_CLIENT_ID_EU_429 }}
      BLIZZARD_CLIENT_SECRET_EU_429: ${{ secrets.BLIZZARD_CLIENT_SECRET_EU_429 }}
      BLIZZARD_CLIENT_ID_US_429:     ${{ secrets.BLIZZARD_CLIENT_ID_US_429 }}
      BLIZZARD_CLIENT_SECRET_US_429: ${{ secrets.BLIZZARD_CLIENT_SECRET_US_429 }}
      BLIZZARD_CLIENT_ID_TW_429:     ${{ secrets.BLIZZARD_CLIENT_ID_TW_429 }}
      BLIZZARD_CLIENT_SECRET_TW_429: ${{ secrets.BLIZZARD_CLIENT_SECRET_TW_429 }}
      BLIZZARD_CLIENT_ID_KR_429:     ${{ secrets.BLIZZARD_CLIENT_ID_KR_429 }}
      BLIZZARD_CLIENT_SECRET_KR_429: ${{ secrets.BLIZZARD_CLIENT_SECRET_KR_429 }}
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Set up Python
        uses: actions/setup-python@v5
        with: { python-version: '3.13' }
      - name: Install deps
        run: pip install aiohttp requests psutil
      - name: Build batch matrix
        id: matrix
        shell: bash
        run: |
          ITEMS=()
          for region in $REGIONS; do
            TOTAL=$(python sync_pvp.py --list-ids-only --region "$region" | wc -l)
            COUNT=$(( (TOTAL + BATCH_SIZE - 1) / BATCH_SIZE ))
            echo "=== Region=$region | TOTAL Chars=$TOTAL | COUNT batches=$COUNT ==="
          # How many credential suffixes needed to stay under sliding-window cap (~36k/hour)
          PREFIXES=($(echo $SUFFIX_LIST | tr -d '"' | tr ',' ' '))
          MAX_PREF=${#PREFIXES[@]}
          CREDS_NEEDED=$(( (COUNT + MAX_BATCHES_PER_CRED - 1) / MAX_BATCHES_PER_CRED ))
          [ "$CREDS_NEEDED" -lt 1 ] && CREDS_NEEDED=1
          echo "Suffix list parsed (${MAX_PREF}): ${PREFIXES[*]}"
          echo "CREDS_NEEDED -> $CREDS_NEEDED"
          # Cap to available suffixes
          if (( CREDS_NEEDED > MAX_PREF )); then
            CREDS_NEEDED=$MAX_PREF
          fi
          SUFFIXES=("${PREFIXES[@]:0:$CREDS_NEEDED}")
          echo "Using suffixes: ${SUFFIXES[*]}"
          for ((i=0;i<COUNT;i++)); do
            OFFSET=$(( i * BATCH_SIZE ))
            # Round-robin assignment: low usage
            IDX=$(( i % CREDS_NEEDED ))
            SUFFIX=${SUFFIXES[$IDX]}
            ITEMS+=("{\"region\":\"$region\",\"offset\":$OFFSET,\"batch_id\":$i,\"total_batches\":$COUNT,\"cred_suffix\":\"$SUFFIX\",\"cred_spacing\":$CREDS_NEEDED}")
          done
          done
          # comma‑join
          m=$(printf ',%s' "${ITEMS[@]}")
          echo "matrix=[${m:1}]" >> $GITHUB_OUTPUT

  dispatch:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Fire off the first batch per region
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const matrix = JSON.parse(process.env.MATRIX);
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            const rootId = process.env.GROUP_ID;  // dispatcher run id

            // Dispatch the first batch for each region‑suffix combination
            const grouped = matrix.reduce((acc, j) => {
              const key = `${j.region}|${j.cred_suffix}`;
              if (!acc[key] || j.batch_id < acc[key].batch_id) {
                acc[key] = j;
              }
              return acc;
            }, {});
            const firstBatches = Object.values(grouped);

            for (const job of firstBatches) {
              const groupKey = `${job.region}-${rootId}`;
              await github.rest.actions.createWorkflowDispatch({
                owner,
                repo,
                workflow_id: 'pvp-sync-batch.yml',
                ref: context.ref,
                inputs: {
                  region:        job.region,
                  offset:        String(job.offset),
                  limit:         String(process.env.BATCH_SIZE),
                  batch_id:      String(job.batch_id),
                  batch_num:     String(job.batch_id + 1),
                  total_batches: String(job.total_batches),
                  "cred_suffix": String(job.cred_suffix),
                  "cred_spacing": String(job.cred_spacing),
                  "group-id":    String(groupKey)
                }
              });
              core.info(`▶️ Dispatched ${job.region}@${job.offset} (group ${groupKey})`);
            }
        env:
          MATRIX:     ${{ needs.prepare.outputs.matrix }}
          GROUP_ID:   ${{ github.run_id }}
          BATCH_SIZE: ${{ env.BATCH_SIZE }}
